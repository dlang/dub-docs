extends layout

block title
	- auto title = "Settings";

block body
	h2 Configuring default settings

	p User/System wide default DUB values can be specified in settings.json file.

	p A settings.json file could look like this:

	pre.code
		|{
		|	"defaultArchitecture": "x86_64",
		|	"defaultCompiler": "ldc"
		|}

	p The file settings.json can be located in different locations. Last item in list has highest priority.
	
	p Windows
		ul
			li <code>%ProgramData%\dub\settings.json</code>
			li <code>&lt;dub executable folder&gt;\..\etc\dub\settings.json</code>
			li <code>%APPDATA%\dub\settings.json</code>
			li <code>%ROOT_PACKAGE_DIR%\dub.settings.json</code>

	p Posix
		ul
			li <code>/var/lib/dub/settings.json</code>
			li <code>/etc/dub/settings.json</code> (only if DUB has been installed in `/usr/...`)
			li <code>&lt;dub executable folder&gt;/../etc/dub/settings.json</code>
			li <code>~/.dub/settings.json</code>
			li <code>$ROOT_PACKAGE_DIR/dub.settings.json</code>
			
	h3 Settings overview
	
	// implementation: https://github.com/dlang/dub/blob/27908126db37c01435110143971904a0b32303b6/source/dub/dub.d#L1903

	table
		tr
			th Name
			th Type
			th Description

		tr
			td registryUrls
			td: code string[]
			td Search the given registry URL first when resolving dependencies. Can be specified multiple times. Available registry types:
				ul
					li DUB: URL to DUB registry (default)
					li Maven: URL to Maven repository + group id containing dub packages as artifacts. E.g. mvn+http://localhost:8040/maven/libs-release/dubpackages

		tr
			td skipRegistry
			td: code string
			td 	Sets a mode for skipping the search on certain package registry types: 
				ul
					li none: Search all configured or default registries (default) 
					li standard: Don't search the main registry (e.g. https://code.dlang.org/) 
					li configured: Skip all default and user configured registries 
					li all: Only search registries specified with --registry

		tr
			td customCachePaths
			td: code string[]
			td 
				p Additional paths that contain packages in subfolders with the pattern "(name)-(version)/(name)/".
				p Can be used to provide prebuilt DUB libraries (e.g. for distribution package maintainers).

		tr
			td defaultCompiler
			td: code string
			td 
				p Specifies the compiler binary to use (can be a path). 
				p Arbitrary pre- and suffixes to the identifiers below are recognized (e.g. ldc2 or dmd-2.063) and matched to the proper compiler type: dmd, gdc, ldc, gdmd, ldmd

		tr
			td defaultArchitecture
			td: code string
			td Force a different architecture (e.g. x86 or x86_64) 

		tr
			td defaultLowMemory
			td: code bool
			td Enable the garbage collector for the compiler(dmd/ldc), reducing the compiler memory requirements but increasing compile times.

		tr
			td defaultEnvironments
			td: code string[string]
			td Sets the keys in environments if they are not overriden by the dub recipe. Defines default environment variables used by all executable invocations. This has the lowest precedence.

		tr
			td defaultBuildEnvironments
			td: code string[string]
			td Sets the keys in buildEnvironments if they are not overriden by the dub recipe. Defines default environment variables used by build tools (compiler, linker), preBuildCommands, postBuildCommands, preGenerateCommands and postGenerateCommands invocations. Overrides keys from defaultEnvironments.

		tr
			td defaultRunEnvironments
			td: code string[string]
			td Sets the keys in runEnvironments if they are not overriden by the dub recipe. Defines default environment variables used by the built user program, preRunCommands and postRunCommands invocations. Overrides keys from defaultEnvironments.

		tr
			td defaultPreGenerateEnvironments
			td: code string[string]
			td Sets the keys in preGenerateEnvironments if they are not overriden by the dub recipe. Defines default environment variables used by preGenerateCommands invocations. Overrides keys from defaultEnvironments.

		tr
			td defaultPostGenerateEnvironments
			td: code string[string]
			td Sets the keys in postGenerateEnvironments if they are not overriden by the dub recipe. Defines default environment variables used by postGenerateCommands invocations. Overrides keys from defaultEnvironments.

		tr
			td defaultPreBuildEnvironments
			td: code string[string]
			td Sets the keys in preBuildEnvironments if they are not overriden by the dub recipe. Defines default environment variables used by preBuildCommands invocations. Overrides keys from defaultBuildEnvironments and defaultEnvironments.

		tr
			td defaultPostBuildEnvironments
			td: code string[string]
			td Sets the keys in postBuildEnvironments if they are not overriden by the dub recipe. Defines default environment variables used by postBuildCommands invocations. Overrides keys from defaultBuildEnvironments and defaultEnvironments.

		tr
			td defaultPreRunEnvironments
			td: code string[string]
			td Sets the keys in preRunEnvironments if they are not overriden by the dub recipe. Defines default environment variables used by preRunCommands invocations. Overrides keys from defaultRunEnvironments and defaultEnvironments.

		tr
			td defaultPostRunEnvironments
			td: code string[string]
			td Sets the keys in postRunEnvironments if they are not overriden by the dub recipe. Defines default environment variables used by postRunCommands invocations. Overrides keys from defaultRunEnvironments and defaultEnvironments.

	h3 Environment Variables
	
	// test case: https://github.com/dlang/dub/blob/master/test/environment-variables.script.d#L10
	
	p Environment variables are set by keys using the defaultEnvironments and related settings in the settings and with highest precedence environments and related settings in the package recipe.
	
	p For finding the default environment variables first the system environment variables are loaded, then overriden by the settings environment variables. This goes through all the default settings first.
		
	p Afterwards dependency or recipe environment variables override these default environment variables. Recipe variables have higher precedence than dependency variables.
	
	p Defining a generic environments block inside a dependency overrides the keys set by e.g. defaultPreRunEnvironments inside the settings.
